---
- name: Set Proper Nameserver
  blockinfile:
    block: |
      nameserver "{{nameserver.ns1}}"
      nameserver "{{nameserver.ns2}}"
    insertafter: EOF
    path: /etc/resolv.conf

- name: Install Necessary Packages
  package:
    update_cache: true
    name: "{{item}}"
    state: present
  loop: "{{docker_packages.redhat}}"
  when: ansible_distribution == "CentOS"

- name: Set http proxy for
  lineinfile:
    dest: /etc/yum.conf
    insertafter: EOF
    line: |
      proxy={{proxy.server}}
      proxy_username={{proxy.username}}
      proxy_password={{proxy.password}}
  when: proxy.server is defined and proxy.server != '' and proxy.server != None

- name: Add Docker Repository
  yum_repository:
    name: Docker
    description: Docker CE Stable
    baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
    state: present

- name: Update and Install Docker
  package:
    update_cache: true
    name: "{{item}}"
    state: present
  loop: "{{docker_version.redhat | default (default_docker_version)}}"

  ######## Set HTTP Proxy for Docker systemd service in vars.yaml ###########

- name: Set Docker Systemd Proxy
  file:
    name: /etc/systemd/system/docker.service.d
    state: directory

- template:
    src: Jinja2 Template
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  when: proxy.server is defined and proxy.server != '' and proxy.server != None
  notify:
    - docker_restart
    - daemon_reload
  tags: docker_proxy

- name: Enable Docker Service To Run At Boot Time
  service:
    name: docker
    enabled: true
    state: started
- meta: flush_handlers

- name: Check if Docker-compose Is Already Installed
  stat:
    path: /usr/local/bin/docker-compose
  register: docpos

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: "0755"
  when: docpos.stat.exists == false
  tags: docker_compose

- name: Get Python PIP For Centos 7
  get_url:
    url: "https://bootstrap.pypa.io/pip/2.7/get-pip.py"
    dest: /root/get-pip.py
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Install Python pip
  command: python /root/get-pip.py
  when: ansible_distribution == "CentOS" and ansible_distribution_major_version == "7"

- name: Install Docker Module for Python
  pip:
    name: "{{item}}"
    state: latest
    extra_args: --upgrade
  loop: "{{pip_modules}}"
  notify:
    - docker_restart
- meta: flush_handlers

  ################### Set your Docker hub credentials in default/main.yml #########################
- name: Login To DockerHub
  docker_login:
    username: "{{docker.username}}"
    password: "{{docker.password}}"
  when: docker.username is defined and docker.username != '' and docker.username != None
  tags: docker_login

- name: Pull Default Docker Images
  docker_image:
    name: "{{ item }}"
    source: pull
  loop: "{{images_name}}"
